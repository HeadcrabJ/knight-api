swagger: "2.0"
info:
  description: Social network Knight API documentation
  version: 1.0.0
  title: Swagger Knight API
  license:
    name: GNU AGPLv3
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
host: localhost
tags:
- name: users
  description: Routes for managing your account
- name: posts
  description: Routes for managing your posts
- name: mod
  description: Routes for moderators and admins
schemes:
- https
paths:
  /users/get:
    get:
      tags:
      - users
      summary: List of users
      description: Returns list of all users in database
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
  /users/get/{id}:
    get:
      tags:
      - users
      summary: Get specific user
      description: Returns specified user by id
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        400:
          description: Bad Request
        404:
          description: User not found
  /users/get/@me:
    get:
      tags:
      - users
      summary: Get current user
      description: Get user by token
      parameters:
      - name: Authorization
        in: header
        description: Discord Access Token
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        400:
          description: Bad Request
        404:
          description: User not found
  /users/update/@me:
    put:
      tags:
      - users
      summary: Update current user
      description: Change data in database of current user
      parameters:
      - name: Authorization
        in: header
        description: Discord Access Token
        required: true
        type: string
      - name: body
        in: body
        description: User object
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User not found
  /users/delete/@me:
    delete:
      tags:
      - users
      summary: Delete current user
      description: Delete current user by token from database
      parameters:
      - name: Authorization
        in: header
        required: true
        type: string
      responses:
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User not found
  /posts/get:
    get:
      tags:
      - posts
      summary: Get all posts
      description: Returns list of all posts from database
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Post'
  /posts/get/{id}:
    get:
      tags:
      - posts
      summary: Get post by id
      description: Returns post by id
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Post'
        400:
          description: Bad Request
        404:
          description: Post not found
  /posts/create:
    put:
      tags:
      - posts
      summary: Create post
      description: Create post with content from body
      parameters:
      - name: body
        in: body
        description: Post content
        required: true
        schema:
          type: string
          default: Example 12345
      responses:
        400:
          description: String length must be more than 8
        404:
          description: User not found
  /posts/delete/{id}:
    delete:
      tags:
      - posts
      summary: Delete post
      description: Delete post by id
      parameters:
      - name: Authorization
        in: header
        description: Disord Access Token
        required: true
        type: string
      - name: id
        in: path
        description: User ID
        required: true
        type: integer
      responses:
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User not found
  /mod/updateTitle/{user}/{title}:
    put:
      tags:
      - mod
      summary: Update title
      description: Update user title
      parameters:
      - name: Authoriozation
        in: header
        description: Discord Access Token
        required: true
        type: string
      - name: user
        in: path
        description: User ID
        required: true
        type: integer
      - name: title
        in: path
        description: User Title
        required: true
        type: string
      responses:
        204:
          description: No content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User not found
  /mod/clearTitle/{user}:
    delete:
      tags:
      - mod
      summary: Clear title
      description: Clear title of user by id
      parameters:
      - name: Authorization
        in: header
        description: Discord Access Token
        required: true
        type: string
      - name: user
        in: path
        description: User ID
        required: true
        type: integer
      responses:
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User not found
  /mod/deleteUser/{user}:
    delete:
      tags:
      - mod
      summary: Delete user
      description: Delete user by id
      parameters:
      - name: Authorization
        in: header
        description: Discord Access Token
        required: true
        type: string
      - name: user
        in: path
        description: User ID
        required: true
        type: integer
      responses:
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User not found
        
definitions:
  Title:
    type: string
    enum:
    - GM
    - IM
    - FM
    - CM
    - WGM
    - WIM
    - WFM
    - NM
  Sex:
    type: string
    enum:
    - MALE
    - FEMALE
  Role:
    type: string
    enum:
    - USER
    - MOD
    - ADMIN
  Federation:
    type: string
    enum:
    - FIDE
    - NATIONAL
  User:
    type: object
    properties:
      id:
        type: number
      name:
        type: string
      bio:
        type: string
      chessLink:
        type: string
        default: https://chess24.com/en/profile/chesshedge
      country:
        type: string
        enum:
        - UA
        - UK
        - US
      email:
        type: string
        default: example@example.com
      federation:
        type: string
        items:
          $ref: "#/definitions/Federation"
      rating:
        type: integer
        default: 1224
      role:
        type: string
        items:
          $ref: "#/definitions/Role"
      sex:
        type: string
        items:
          $ref: "#/definitions/Sex"
      title:
        type: string
        items:
          $ref: "#/definitions/Title"
  
