openapi: 3.0.0
info:
  title: Knight Social Network
  description: Social network Knight API documentation
  version: 1.0.0
  contact:
    name: Discord to contact with me
    url: https://headcrabj.github.io/
  license:
    name: GNU AGPLv3
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
servers:
  - url: https://dev.api.knight.chesscord.wiki/
tags:
- name: auth
  description: User authorization and token refreshing
- name: users
  description: Getting information about users and profile updating
- name: posts
  description: Getting posts and post editing
- name: mod
  description: Management of posts and users for moderators
paths:
  /auth/authorize:
    post:
      tags:
      - auth
      summary: Get token by code
      description: Authorize user and create entry in database
      parameters:
      - name: code
        in: query
        description: Authorization code
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        400:
          description: Invalid code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscordError'
  /auth/refresh:
    post:
      tags:
      - auth
      summary: Refresh token
      description: Renew token before token expires
      parameters:
      - name: token
        in: query
        description: Refresh token
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        400:
          description: Invalid grant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscordError'
  /auth/revoke:
    post:
      tags:
      - auth
      summary: Revoke token
      description: Revoke token
      parameters:
      - name: token
        in: query
        description: Revoke token
        required: true
        schema:
          type: string
      responses:
        400:
          description: Invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscordError'
  /users/get/all:
    get:
      tags:
      - users
      summary: List of users
      description: Returns list of all users in database
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /users/get/{id}:
    get:
      tags:
      - users
      summary: Get specific user
      description: Returns specified user by id
      parameters:
      - name: id
        in: path
        description: Discord user ID
        required: true
        schema:
          type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad Request
        404:
          description: User not found
  /users/get/@me:
    get:
      tags:
      - users
      summary: Get current user
      description: Get current user by Discord token
      security:
      - ApiKeyAuth: []
      parameters:
      - $ref: "#/components/parameters/Auth"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad Request
        404:
          description: User not found
  /users/update/@me:
    put:
      tags:
      - users
      summary: Update current user
      description: Change data in database of current user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      security:
      - ApiKeyAuth: []
      parameters:
      - $ref: "#/components/parameters/Auth"
      responses:
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User not found
  /users/delete/@me:
    delete:
      tags:
      - users
      summary: Delete current user
      description: Delete current user from database by Discord token
      security:
      - ApiKeyAuth: []
      parameters:
      - $ref: "#/components/parameters/Auth"
      responses:
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User not found
  /posts/get/all:
    get:
      tags:
      - posts
      summary: Get all posts
      description: Returns list of all posts from database
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Post"
  /posts/get/{id}:
    get:
      tags:
      - posts
      summary: Get post by id
      description: Returns post by id
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        400:
          description: Bad Request
        404:
          description: Post not found
  /posts/create:
    put:
      tags:
      - posts
      summary: Create post
      description: Create post with content from body
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        400:
          description: String length must be more than 8
        404:
          description: User not found
  /posts/votes/increment/{id}:
    put:
      tags:
      - posts
      summary: Increment votes
      description: Increment votes in post by id
      parameters:
      - $ref: "#/components/parameters/Auth"
      - name: id
        in: path
        description: Post ID
        required: true
        schema:
          type: number
      responses:
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User/Post not found
  /posts/votes/decrement/{id}:
    put:
      tags:
      - posts
      summary: Decrement votes
      description: Decrement votes in post by id
      parameters:
      - $ref: "#/components/parameters/Auth"
      - name: id
        in: path
        description: Post ID
        required: true
        schema:
          type: number
      responses:
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User/Post not found
  /posts/delete/{id}:
    delete:
      tags:
      - posts
      summary: Delete post
      description: Delete post by id
      security:
      - ApiKeyAuth: []
      parameters:
      - $ref: "#/components/parameters/Auth"
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: number
      responses:
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User not found
  /mod/updateTitle/{user}/{title}:
    put:
      tags:
      - mod
      summary: Update title
      description: Update user title
      security:
      - ApiKeyAuth: []
      parameters:
      - $ref: "#/components/parameters/Auth"
      - name: user
        in: path
        description: User ID
        required: true
        schema:
          type: number
      - name: title
        in: path
        description: User Title
        required: true
        schema:
          type: string
      responses:
        204:
          description: No content
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User not found
  /mod/clearTitle/{user}:
    delete:
      tags:
      - mod
      summary: Clear title
      description: Clear title of user by id
      security:
      - ApiKeyAuth: []
      parameters:
      - $ref: "#/components/parameters/Auth"
      - name: user
        in: path
        description: User ID
        required: true
        schema:
          type: number
      responses:
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User not found
  /mod/deleteUser/{user}:
    delete:
      tags:
      - mod
      summary: Delete user
      description: Delete user from database by id
      security:
      - ApiKeyAuth: []
      parameters:
      - $ref: "#/components/parameters/Auth"
      - name: user
        in: path
        description: Discord user ID
        required: true
        schema:
          type: number
      responses:
        400:
          description: Bad Request
        401:
          description: Unauthorized
        404:
          description: User not found

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  parameters:
    Auth:
      name: Authorization
      in: header
      description: Discord Access Token
      required: true
      schema:
        type: string
  schemas:
    Title:
      type: string
      enum:
      - GM
      - IM
      - FM
      - CM
      - WGM
      - WIM
      - WFM
      - NM
    Sex:
      type: string
      enum:
      - MALE
      - FEMALE
    Role:
      type: string
      enum:
      - USER
      - MOD
      - ADMIN
    Federation:
      type: string
      enum:
      - FIDE
      - NATIONAL
    Country:
      type: string
      enum:
      - UK
      - US
      - UA
    DiscordError:
      type: object
      properties:
        error:
          type: string
          example: invalid_request
        error_description:
          type: string
          example: Invalid "code" in request.
    AccessToken:
      type: object
      properties:
        access_token:
          type: string
          example: iJZCtGrZsmspnIFPQRsiBg1ad56cbU
        token_type:
          type: string
          default: Bearer
        expires_in:
          type: integer
          example: 604800
        refresh_token:
          type: string
          example: YzCJfmXgLtHOyl9nu2VmaeX7jyFKvP
        scope:
          type: string
          default: identify
    User:
      type: object
      properties:
        name:
          type: string
          default: Nickname from Discord
          example: Krabi
        bio:
          type: string
          example: My beautiful bio
        chessLink:
          type: string
          example: https://chess24.com/en/profile/chesshedge
        country:
          type: string
          example: UA
          items:
            $ref: "#/components/schemas/Country"
        email:
          type: string
          example: https://headcrabj.github.io/
        federation:
          type: string
          example: FIDE
          items:
            $ref: "#/components/schemas/Federation"
        rating:
          type: integer
          default: 0
          example: 32
        role:
          type: string
          example: USER
          default: USER
          items:
            $ref: "#/components/schemas/Role"
        sex:
          type: string
          example: MALE
          items:
            $ref: "#/components/schemas/Sex"
        title:
          type: string
          example: FM
          items:
            $ref: "#/components/schemas/Title"
    Post:
      type: object
      properties:
        date:
          type: number
          example: 1654944238
        author:
          type: number
          example: 638485831796432456
        content:
          type: string
          example: Best post

externalDocs:
  description: GitHub
  url: https://github.com/u032/knight
